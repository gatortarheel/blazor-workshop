@page "/"
@inject HttpClient HttpClient // inject directive newProperty newPropertyName - uses dependency injection

<h1>Custom Wood Working</h1>  

@code {
    List<PizzaSpecial> specials;
    List<WoodProduct> portfolio;

    protected override async Task OnInitializedAsync()
    {
        specials = await HttpClient.GetFromJsonAsync<List<PizzaSpecial>>("specials");

        portfolio = await HttpClient.GetFromJsonAsync<List<WoodProduct>>("portfolio");
    }
}
<div class="main">
    <ul class="pizza-cards">
        @if (specials != null)
        {
            @foreach (var special in specials)
            {
                <li style="background-image: url('@special.ImageUrl')">
                    <div class="pizza-info">
                        <span class="title">@special.Name</span>
                        @special.Description
                        <span class="price">@special.GetFormattedBasePrice()</span>
                    </div>
                </li>
            }
        }
    </ul>
</div>
<hr/>
<div class="main">
    <ul class="pizza-cards">
        @if (specials != null)
        {
            @foreach (var product in portfolio)
            {
                <li style="background-image: url('@product.ImageUrl')">
                    <div class="pizza-info">
                        <span class="title">@product.Name</span>
                        @product.Description
                        <span class="price">@product.GetFormattedBasePrice()</span>
                    </div>
                </li>
            }
        }
    </ul>
</div>